<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>srm-翻译</title>
      <link href="/2018/08/30/srm-translation/"/>
      <url>/2018/08/30/srm-translation/</url>
      <content type="html"><![CDATA[<h1 id="srm-728-div1-T1-Halving"><a href="#srm-728-div1-T1-Halving" class="headerlink" title="srm-728-div1-T1-Halving"></a>srm-728-div1-T1-Halving</h1><h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><blockquote><p>你有一些木棍，现在你想让这些木棍都变成同样的长度<br>你可以进行如下的操作<br>选择一根长度为L&gt;=2的木棍<br>如果L为偶数，将木棍一分为2，变成两根L/2的木棍<br>否则，分成一根为(L+1) / 2, 另一根为(L-1) / 2;<br>在分成的两根中选择其中一根，扔掉另外一根<br>可以证明的是任何集合的木棍都能最终变成一样长度的木棍<br>现在问你最少需要几步可以完成任务<br>$2&lt;=n&lt;=50, 1&lt;=a_i&lt;=10^9$</p></blockquote><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><pre><code>{11, 4}Returns: 3最优方案是选择长度为 11的木棍, 分成 5 and 6 ,保留5选择长度为4的木棍,分成两个长度为2的，保留一个2选择长度为5的, 分成2和3，保留2现在得到了 两个2{1, 2, 3, 4, 5, 6, 7}Returns: 10</code></pre><h1 id="srm-728-div2-T3-IncreasingSequencesEasy"><a href="#srm-728-div2-T3-IncreasingSequencesEasy" class="headerlink" title="srm-728-div2-T3-IncreasingSequencesEasy"></a>srm-728-div2-T3-IncreasingSequencesEasy</h1><h2 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个有向图，每个点都只有一个出度<br>问你存在多少的有向图，可以从原图中选择一个三元组$a,b,c$，重标号成$b,c,a$之后得到<br>$1&lt;=n&lt;=10$</p></blockquote><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><pre><code>{2, 2, 0}//表示0-&gt;2,1-&gt;2,2-&gt;0这个有向图Returns: 20 1 2 -&gt; 1 2 0 1 2 0 -&gt; 2 0 1可以得到两个 {1, 2, 1} 与 {1, 0, 0}两个新图{0, 1, 2, 3}Returns: 0每个点都是自环，不管怎么改变标号，图还是原图{4, 5, 3, 1, 1, 5}Returns: 179</code></pre><h1 id="srm-728-div2-T2-IncreasingSequencesEasy"><a href="#srm-728-div2-T2-IncreasingSequencesEasy" class="headerlink" title="srm-728-div2-T2-IncreasingSequencesEasy"></a>srm-728-div2-T2-IncreasingSequencesEasy</h1><h2 id="题意-2"><a href="#题意-2" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你两个长度为n的数组L[],R[]<br>求满足<code>L[i]&lt;=A[i]&lt;=R[i]</code>而且<code>A[0]&lt;A[1]&lt;...&lt;A[n-1]</code>的序列的数量<br>答案对998244353取模<br>$1&lt;=n&lt;=300,1&lt;=L[i]&lt;=10^4,L[i]&lt;=R[i]&lt;=10^4$</p></blockquote><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><pre><code>{1, 3, 1, 4}{6, 5, 4, 6}Returns: 4There are 4 strictly increasing sequences satisfying the conditions: {1, 3, 4, 5}, {1, 3, 4, 6}, {2, 3, 4, 5} and {2, 3, 4, 6}.1){10, 20}{20, 30}Returns: 120</code></pre><h1 id="srm-729-div2-T2-SoManyRectangles"><a href="#srm-729-div2-T2-SoManyRectangles" class="headerlink" title="srm-729-div2-T2-SoManyRectangles"></a>srm-729-div2-T2-SoManyRectangles</h1><h2 id="题意-3"><a href="#题意-3" class="headerlink" title="题意"></a>题意</h2><blockquote><p>有n个矩形，问你最大重叠的次数<br>边或者点的重叠不算<br>$1&lt;=n&lt;=50$</p></blockquote><h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><pre><code>{0, 0, 0, 0, 0} // x1[]{0, 0, 0, 0, 0} // y1[]{1, 1, 1, 1, 1} // x2[]{1, 1, 1, 1, 1} // y2[](x1[i], y1[i])  (x2[i], y2[i]) 表示一个矩形的左下角和右上角Returns: 5</code></pre><h1 id="srm-729-div2-T3-RareItems"><a href="#srm-729-div2-T3-RareItems" class="headerlink" title="srm-729-div2-T3-RareItems"></a>srm-729-div2-T3-RareItems</h1><h2 id="题意-4"><a href="#题意-4" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个数组表示每种物品的出现个数<br>现在根据每种物品的比例随机购买每种物品<br>期望购买几次能将每种物品都买到手<br>$1&lt;=n&lt;=20$</p></blockquote><h2 id="样例-4"><a href="#样例-4" class="headerlink" title="样例"></a>样例</h2><pre><code>{2,2}Returns: 3.0</code></pre><h1 id="srm-729-div1-T1-MagicNumberThree"><a href="#srm-729-div1-T1-MagicNumberThree" class="headerlink" title="srm-729-div1-T1-MagicNumberThree"></a>srm-729-div1-T1-MagicNumberThree</h1><h2 id="题意-5"><a href="#题意-5" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个长度为50的数字串，问你有多少个子序列构成的数字可以被3整除<br>答案对1e9+7取模</p></blockquote><h2 id="样例-5"><a href="#样例-5" class="headerlink" title="样例"></a>样例</h2><pre><code>&quot;132&quot;Returns: 3&quot;00&quot;Returns: 3</code></pre><h1 id="srm-730-div2-T2-ExpectedMinimumPowerDiv2"><a href="#srm-730-div2-T2-ExpectedMinimumPowerDiv2" class="headerlink" title="srm-730-div2-T2-ExpectedMinimumPowerDiv2"></a>srm-730-div2-T2-ExpectedMinimumPowerDiv2</h1><h2 id="题意-6"><a href="#题意-6" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你两个整数$n,x$, $1&lt;=n&lt;=50$<br>假如要选择x个整数，每个整数都在1-n之间，<br>现在在所有的这些选择中，我们选取x个数都不同的选择<br>假设选择中最小的数为$S$,求$2^S$的期望<br>也就是说每一种x个数不同的选择都会有一个$S_i$,求<br>$2^{S_i}$的平均值，也就是期望</p></blockquote><h2 id="样例-6"><a href="#样例-6" class="headerlink" title="样例"></a>样例</h2><pre><code>44Returns: 2.0只能选择1 2 3 4最小的数是1，所以答案是2^1=2{1,2,3,4}其实有4!的排列，但是我们要算的是平均值，乘以排列数再除以排列数就相互抵消了32Returns: 2.6666666666666665有三种选择 {1,2} or {1,3} or {2,3}. S值分别为1 1 22^S的期望为 (2^1 + 2^1 + 2^2) / 3 = 8 / 3 = 2.6666666</code></pre><h1 id="srm-730-div2-T3-StonesOnATreeDiv2"><a href="#srm-730-div2-T3-StonesOnATreeDiv2" class="headerlink" title="srm-730-div2-T3-StonesOnATreeDiv2"></a>srm-730-div2-T3-StonesOnATreeDiv2</h1><h2 id="题意-7"><a href="#题意-7" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一棵树，每个点有点权<br>现在你可以在一些点上放石头，也可以拿掉某些点上的石头<br>一个点可以放石头当且仅当这个点的所有儿子都放上了石头<br>根节点放上石头任务完成<br>求在整个过程中放着石头的节点的点权之和的最大值的最小值<br>n&lt;=1000</p></blockquote><h2 id="样例-7"><a href="#样例-7" class="headerlink" title="样例"></a>样例</h2><pre><code>{0,1,2,3} //分别表示1的父亲 2的父亲 3的父亲 4的父亲{1,2,2,4,4}//每个点的点权值Returns: 8五个节点构成了一条链在节点4上放一个石头 (权值和 = 4).在节点3上放一个石头 (权值和 = 8).移除节点4上的石头   (权值和 = 4).在节点2上放一个石头 (权值和 = 6).在节点1上放一个石头 (权值和 = 8).移除节点2上的石头   (权值和 = 6)在节点0(根节点)上放一个石头 (权值和 = 7)整个过程中最大的权值和为8，不存在比最大值比8小的方案了</code></pre><h1 id="srm-731-div2-T3-JustBrackets"><a href="#srm-731-div2-T3-JustBrackets" class="headerlink" title="srm-731-div2-T3-JustBrackets"></a>srm-731-div2-T3-JustBrackets</h1><h2 id="题意-8"><a href="#题意-8" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个合法的括号序列，每次你可以删除一个”()”<br>你可以删除0个或者多个”()”<br>求操作之后字典序最小的序列<br>字符串长度&lt;=100</p></blockquote><h2 id="样例-8"><a href="#样例-8" class="headerlink" title="样例"></a>样例</h2><pre><code>&quot;()&quot;Returns: &quot;()&quot;解释:要保证非空&quot;()()&quot;Returns: &quot;()&quot;&quot;(())&quot;Returns: &quot;(())&quot;&quot;(()(()))&quot;Returns: &quot;((()))&quot;</code></pre><h1 id="srm-731-div1-T1-TreesAndBractkets"><a href="#srm-731-div1-T1-TreesAndBractkets" class="headerlink" title="srm-731-div1-T1-TreesAndBractkets"></a>srm-731-div1-T1-TreesAndBractkets</h1><h2 id="题意-9"><a href="#题意-9" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个合法的括号序列s1，每次你可以删除一个”()”<br>你可以删除0个或者多个”()”<br>求能否删成另一个括号序列s2</p></blockquote><h2 id="样例-9"><a href="#样例-9" class="headerlink" title="样例"></a>样例</h2><pre><code>&quot;()&quot;&quot;()&quot;Returns: &quot;Possible&quot;&quot;(()()())&quot;&quot;((()))&quot;Returns: &quot;Impossible&quot;&quot;((())((())())())&quot;&quot;(()(())())&quot;Returns: &quot;Possible&quot;</code></pre><h1 id="srm-733-div2-T2-BuildingSpanningTreesDiv2"><a href="#srm-733-div2-T2-BuildingSpanningTreesDiv2" class="headerlink" title="srm-733-div2-T2-BuildingSpanningTreesDiv2"></a>srm-733-div2-T2-BuildingSpanningTreesDiv2</h1><h2 id="题意-10"><a href="#题意-10" class="headerlink" title="题意"></a>题意</h2><blockquote><p>有一副n个点的完全图G（每两个点之间都有边，一共有 n*(n-1)/2条边)<br>告诉你一个边的集合E,里面有n-3条边<br>G的生成树是选取G里面的n-1条边连接G中所有的点<br>请问有多少的生成树会包括E，返回答案对987654323取模<br>$4 &lt;= n &lt;= 1000$<br>假设$x[i]-&gt;y[i]$表示E里面的一条边<br>$x[i] &lt; y[i]$ </p></blockquote><h2 id="样例-10"><a href="#样例-10" class="headerlink" title="样例"></a>样例</h2><pre><code>n=4x={1}x={2}Returns: 8解释8个生成树如下会包括边(1, 2):{(1, 2), (1, 3), (1, 4)}{(1, 2), (1, 3), (2, 4)}{(1, 2), (1, 3), (3, 4)}{(1, 2), (2, 3), (2, 4)}{(1, 2), (1, 4), (2, 3)}{(1, 2), (1, 4), (3, 4)}{(1, 2), (2, 3), (3, 4)}{(1, 2), (2, 4), (3, 4)}n=6x={1,1,2}y={2,3,3}Returns: 0解释n-3条边之间形成了环，无解5{1,2}{4,5}Returns: 20</code></pre><h1 id="srm-733-div2-T3-HamiltonianPathsInGraph"><a href="#srm-733-div2-T3-HamiltonianPathsInGraph" class="headerlink" title="srm-733-div2-T3-HamiltonianPathsInGraph"></a>srm-733-div2-T3-HamiltonianPathsInGraph</h1><h2 id="题意-11"><a href="#题意-11" class="headerlink" title="题意"></a>题意</h2><blockquote><p>有一个有向图,恰好有n*(n-1)/2条边，对于每一个(i，j)要么有一条<br>i-&gt;j的边，要么有一条j-&gt;i的边,但不会同时存在这两条边<br>给你这个图的邻接矩阵a，a[i][j]=’+’表示i-&gt;j有边，’-‘表示没有<br>a[i][i]=’.’表示这个图没有自环<br>图的汉密尔顿路径是长度为n包含每个点恰好一次的路径<br>实际上对于上面这种特性的图，一定存在至少一条汉密尔顿路径<br>输出任意一条汉密尔顿路径</p></blockquote><h2 id="样例-11"><a href="#样例-11" class="headerlink" title="样例"></a>样例</h2><pre><code>{&quot;.+&quot;, &quot;-.&quot;}Returns: {0, 1 }有唯一一条汉密尔顿路径0-&gt;1{&quot;.--+&quot;, &quot;+.+-&quot;, &quot;+-.-&quot;, &quot;-++.&quot;}Returns: {3, 1, 2, 0 }下面都是答案{0, 3, 1, 2}{1, 0, 3, 2}{1, 2, 0, 3}{2, 0, 3, 1}{3, 1, 2, 0}</code></pre><h1 id="srm-734-div2-T2-TheSquarecityDiv2"><a href="#srm-734-div2-T2-TheSquarecityDiv2" class="headerlink" title="srm-734-div2-T2-TheSquarecityDiv2"></a>srm-734-div2-T2-TheSquarecityDiv2</h1><h2 id="题意-12"><a href="#题意-12" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个n*n的数字网格,每个格子表示一个房间,每个格子里面的数字表示房间的温度<br>每个房间的温度都是不同的<br>每个房间一开始都有一个人<br>从(x1,y1)移动到(x2,y2)需要花费|x1-x2|+|y1-y2|的时间<br>一个人每次移动的时间不得超过r<br>现在所有人都开始重复如下操作:<br>每个人都去寻找最近的比自己房间温度高的房间,直到距离r以内不存在温度更高的房间为止<br>求最终有多少个房间里面有人 以及 人数最多的房间有多少人<br>$1&lt;=n&lt;=20$</p></blockquote><h2 id="样例-12"><a href="#样例-12" class="headerlink" title="样例"></a>样例</h2><pre><code>r = 1{    9, 1, 6,     5, 3, 2,     7, 4, 8}ans = {4, 4}温度为1与5的房间的人都走到了温度9的房间3先走到5再走到92和4房间的最终都会到8...</code></pre><h1 id="srm-734-div2-T3-TheRectangularCityDiv2"><a href="#srm-734-div2-T3-TheRectangularCityDiv2" class="headerlink" title="srm-734-div2-T3-TheRectangularCityDiv2"></a>srm-734-div2-T3-TheRectangularCityDiv2</h1><h2 id="题意-13"><a href="#题意-13" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个n*m的网格，里面有空地和障碍,<br>请问有多少种走法可以从边界的某个空地出发走遍每一个空地恰好一次，<br>最后从某个边界的空地走出去<br>$n\times m&lt;=20$</p></blockquote><h2 id="样例-13"><a href="#样例-13" class="headerlink" title="样例"></a>样例</h2><pre><code>{    &quot;....&quot;,     &quot;.##.&quot;,     &quot;....&quot;}Returns: 20{    &quot;....&quot;,     &quot;.###&quot;,     &quot;....&quot;}Returns: 2{    &quot;....&quot;,     &quot;####&quot;,     &quot;....&quot;}Returns: 0</code></pre><h1 id="srm-734-div1-T1-TheRoundCityDiv1"><a href="#srm-734-div1-T1-TheRoundCityDiv1" class="headerlink" title="srm-734-div1-T1-TheRoundCityDiv1"></a>srm-734-div1-T1-TheRoundCityDiv1</h1><h2 id="题意-14"><a href="#题意-14" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个半径为r，圆心在0 0位置的圆<br>求从圆心处能看到多少个圆内的整点<br>比如0 0 可以看到1 1，但是看不到2 2，因为2 2被1 1 挡住了<br>$ 1 &lt;= r &lt;= 1e6 $</p></blockquote><h2 id="样例-14"><a href="#样例-14" class="headerlink" title="样例"></a>样例</h2><pre><code>2Returns: 8一共有12个点: (0, 1), (0, -1), (1, 0), (-1, 0), (1, 1), (1, -1), (-1, 1), (-1, -1), (0, 2), (0, -2), (2, 0), (-2, 0),  最后四个点看不到</code></pre><h1 id="srm-735-div2-T2-TeleportationMaze"><a href="#srm-735-div2-T2-TeleportationMaze" class="headerlink" title="srm-735-div2-T2-TeleportationMaze"></a>srm-735-div2-T2-TeleportationMaze</h1><h2 id="题意-15"><a href="#题意-15" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个网格迷宫，求从起点走到终点的最短路<br>有两种走法</p><ul><li>走到上下左右某个相邻的空地，代价是1</li><li>飞到上下左右离子集最近的空地，代价是2，可以跨越障碍<br>网格大小&lt;=50</li></ul></blockquote><h2 id="样例-15"><a href="#样例-15" class="headerlink" title="样例"></a>样例</h2><pre><code>0 0 -&gt; 3 3 .##..###.###....answer: 4从0 0直接飞到0 3,再从0 3直接飞到3 30 1 -&gt; 1 0#..#answer:-1 （无解）0 0 -&gt; 6 1......#####.#.###.#####.#.###.#####.#.....answer: 5</code></pre><h1 id="srm-735-div2-T3-MajoritySubarray"><a href="#srm-735-div2-T3-MajoritySubarray" class="headerlink" title="srm_735_div2_T3_MajoritySubarray"></a>srm_735_div2_T3_MajoritySubarray</h1><h2 id="题意-16"><a href="#题意-16" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你一个数组，长度为100000, 每个元素都在0-49之间<br>求多少子区间存在一个众数的数量大于区间长度的一半<br>众数：出现最多的数</p></blockquote><h2 id="样例-16"><a href="#样例-16" class="headerlink" title="样例"></a>样例</h2><pre><code>0 0 1 2 0answer： 8一共是如下8个子区间{0} {0} {1} {2} {0}{0,0}:0的出现次数超过一半 {0,0,1}：0的出现次数超过一半{0,0,1,2,0}</code></pre><h1 id="736-div2-T2-Reroll"><a href="#736-div2-T2-Reroll" class="headerlink" title="736-div2-T2-Reroll"></a>736-div2-T2-Reroll</h1><h2 id="题意-17"><a href="#题意-17" class="headerlink" title="题意"></a>题意</h2><blockquote><p>给你n个数,表示n个骰子向上的面的数字<br>再给你一个数target(n&lt;=target&lt;=6*n)<br>你可以选取这n个骰子中的若干个骰子重新扔<br>最少需要选择几个骰子重新扔能使得所有朝上的数的和为target<br>$1&lt;=n&lt;=20$</p></blockquote><h2 id="样例-17"><a href="#样例-17" class="headerlink" title="样例"></a>样例</h2><pre><code>42 {1,3,5,3,6,4,2}answer: 610{4,2,4,5}answer: 2</code></pre><h1 id="736-div2-T3-MazeWithKeys"><a href="#736-div2-T3-MazeWithKeys" class="headerlink" title="736-div2-T3-MazeWithKeys"></a>736-div2-T3-MazeWithKeys</h1><h2 id="题意-18"><a href="#题意-18" class="headerlink" title="题意"></a>题意</h2><blockquote><p>你正在设计一个网格地图游戏，网格满足如下条件<br>1：恰好有一个出口<br>2：可能有一些门，门的标号为大写字母A-Z，每种门最多只有一个<br>3：可能有一些钥匙，钥匙的标号为小写字母a-z，每种钥匙只能打开对应的大写字母的门<br>4：可能有一些空地，空地的标号为小数点<br>5：可能有一些障碍，障碍不能经过<br>对于一个地图，你想要知道有多少的空地可以到达出口，为了使游戏显得不那么简单，你想要知道到达出口至少开一扇门的的空地有多少个<br>n,m&lt;=50<br>‘.’ 代表空地<br>‘#’ 代表障碍<br>‘*’代表出口</p></blockquote><h2 id="样例-18"><a href="#样例-18" class="headerlink" title="样例"></a>样例</h2><pre><code>6 7...#.A..#B#.#..#.#.#..#.#.#..#b#.#.a#...#*输出:103 5 a#a#*#..#.a..A.输出:4</code></pre>]]></content>
      
      <categories>
          
          <category> topcoder </category>
          
      </categories>
      
      
        <tags>
            
            <tag> noip普及 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>我从哪里来</title>
      <link href="/2018/08/25/hexo-github/"/>
      <url>/2018/08/25/hexo-github/</url>
      <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><ul><li><a href="https://gitforwindows.org/" target="_blank" rel="noopener">git bash下载</a></li><li><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs下载</a></li><li>打开git bash，输入npm -v 检测是否安装成功</li><li>安装hexo: npm i -g hexo</li></ul></blockquote><h1 id="github-相关"><a href="#github-相关" class="headerlink" title="github 相关"></a>github 相关</h1><p>注册github账号,注意验证好邮箱<br>假设账号名字为yourname<br>在你的github中新建一个仓库,名字为 yourname.github.io</p><p>打开gitbash</p><pre><code>git config --global user.name &quot;账户名&quot;git config --global user.email &quot;github验证的邮箱名&quot;ssh-keygen -t rsa -C &quot;github验证的邮箱名&quot; (默认按回车即可)</code></pre><p>将~/.ssh/id_rsa.pub中的内容复制到github网页端-&gt;settings-&gt;SSH and GPG keys-&gt;New SSH key<br>完成后在bash中输入</p><pre><code>ssh -T git@github.com输入yes即可</code></pre><p>设置成功返回</p><pre><code>Hi xxxxxxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code></pre><h1 id="初始化博客"><a href="#初始化博客" class="headerlink" title="初始化博客"></a>初始化博客</h1><pre><code>hexo init myblogcd mybloghexo s</code></pre><p>打开<a href="http://127.0.0.1:4000/" target="_blank" rel="noopener">http://127.0.0.1:4000/</a> 检验是否初始化成功</p><h1 id="选择主题"><a href="#选择主题" class="headerlink" title="选择主题"></a>选择主题</h1><p>在themes文件夹里面放上主题文件,比如3-hexo主题</p><pre><code>git clone https://github.com/xjoi/hexo-theme-3-hexo themes/3-hexo</code></pre><p>修改 myblog/_config.yml文件,将theme后面的landscape改为3-hexo,更多主题参考<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官网</a></p><pre><code>hexo g &amp;&amp; hexo s</code></pre><p>输入<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>, 查看主题是否加载成功</p><h1 id="将博客部署到github上"><a href="#将博客部署到github上" class="headerlink" title="将博客部署到github上"></a>将博客部署到github上</h1><p>在myblog目录下安装hexo-deployer-git</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>修改myblog/_config.yml最后几行,注意空格要严格一样</p><pre><code>deploy:  type: git  repo: https://github.com/yourname/yourname.github.io.git  branch: master</code></pre><p>部署</p><pre><code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>稍等一会儿在浏览器中输入yourname.github.io查看是否发布成功</p><h1 id="设置博客模板"><a href="#设置博客模板" class="headerlink" title="设置博客模板"></a>设置博客模板</h1><p>修改 scaffolds下的post.md</p><pre><code>---title: {{ title }}date: {{ date }}categories:tags:---</code></pre><h1 id="发表博客"><a href="#发表博客" class="headerlink" title="发表博客"></a>发表博客</h1><pre><code>hexo new post xxx</code></pre><p>会自动生成一个以xxx为title的markdown文件,编辑这个文件即可</p><h1 id="网站的备份"><a href="#网站的备份" class="headerlink" title="网站的备份"></a>网站的备份</h1><p>发布到github上面的内容是不带原有的markdown文件的,发布的是解析后的html文件</p><p>因此为了满足异地的写作与发布,我们应该要将本地的内容以及相关的配置备份一下</p><p><a href="https://lrscy.github.io/2018/01/26/Hexo-Github-Backup/" target="_blank" rel="noopener">备份</a></p><pre><code>git clone https://github.com/yourgithubname/yourgithubname.github.comcd yourgithubnamenpm install hexo-clinpm installnpm install hexo-deployer-git</code></pre><h1 id="网站信息修改"><a href="#网站信息修改" class="headerlink" title="网站信息修改"></a>网站信息修改</h1><p>编辑myblog/_config.yml文件</p><pre><code>title: 网站名字author: 作者url: 网站网址</code></pre><h1 id="文末声明"><a href="#文末声明" class="headerlink" title="文末声明"></a>文末声明</h1><p>编辑<code>3-hexo/_config.yml</code>文件,找到文末声明的地方,修改自己的邮箱</p><h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><p>编辑 <code>node_modules\marked\lib\marked.js</code> 脚本<br>处理markdown与mathjax的冲突<br>如果要显示数学公式,可以在最开头加上mathjax: true</p><pre><code>451行左右(随着版本的更新可能有波动)escape: /^\\([\\`*{}\[\]()# +\-.!_&gt;])/,改为escape: /^\\([`*\[\]()# +\-.!_&gt;])/,459行左右em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,改为em:/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</code></pre><h1 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h1><p>首先关闭myblog/_config.yml中的高亮设置</p><pre><code>highlight:  enable: false</code></pre><p>配置3-hexo/_config.yml中的高亮设置：</p><pre><code>highlight:  on: true # true开启代码高亮  lineNum: true # true显示行号  theme: atom-dark</code></pre><h1 id="头像与文章列表背景"><a href="#头像与文章列表背景" class="headerlink" title="头像与文章列表背景"></a>头像与文章列表背景</h1><blockquote><p>替换themes/3-hexo/source/img 下面的avatar.jpg (头像)<br>替换themes/3-hexo/source/img 下面的background.jpg(文章列表背景图片)</p></blockquote><h1 id="友链与评论"><a href="#友链与评论" class="headerlink" title="友链与评论"></a>友链与评论</h1><p>编辑themes/3-hexo/_config.yml文件</p><blockquote><p>链接图标link: 修改github地址<br>友情链接friends: 增加自己朋友的blog地址<br>评论: comment : 开启设置为true, 选择gitalk ,在下方gitalk下面填入相应信息</p><pre><code>注册: https://github.com/settings/applications/new</code></pre></blockquote><p><img src="/img/auth.png" alt="image"></p><p>编辑3-hexo/_config.yml</p><pre><code>gitalk:  githubID: xjoi #git账户名  repo: xjoi.github.io #仓库名  ClientID: af0e91f8b3e07b208cc7 #上一步得到的信息  ClientSecret: 20b655d18155c0ee2c3093b8be4b91f15d444c3b  adminUser: becauseofyou # 仓库管理员账号名</code></pre><h1 id="全文搜索"><a href="#全文搜索" class="headerlink" title="全文搜索"></a>全文搜索</h1><p>找到3-hexo/_config.yml 中searchAll: 有提示</p><pre><code>searchAll: true# true 启用全文搜索# 开启此功能需要下面操作：# 1. 在 hexo 根目录 执行 npm install hexo-generator-search --save 安装插件# 2. 在 hexo 根目录的 _config.xml 中添加下面内容# search:#   path: search.xml#   field: post</code></pre><h1 id="字数统计"><a href="#字数统计" class="headerlink" title="字数统计"></a>字数统计</h1><p>同上</p><pre><code>word_count: true# true 开启字数统计# 开启此功能需要安装插件 ：在 hexo根目录 执行npm i hexo-wordcount --save</code></pre>]]></content>
      
      <categories>
          
          <category> 工具们 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站搭建 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
  
</search>
